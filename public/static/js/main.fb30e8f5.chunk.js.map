{"version":3,"sources":["store/actions/userSaga.js","store/actions/messageSaga.js","store/actions/mainSaga.js","components/layout/SignedInLinks.jsx","components/layout/SignedOutLinks.jsx","store/actions/userActions.js","components/layout/Navbar.jsx","store/actions/navbarActions.js","components/layout/HomePage.jsx","components/auth/SignIn.jsx","components/auth/LogIn.jsx","components/chat/InputBox.jsx","components/chat/MessageCard.jsx","components/chat/MessageBox.jsx","config/socketConfig.js","store/SocketEmiter.js","store/actions/contactsActions.js","components/chat/ContactsSearch.jsx","components/chat/ContactButton.jsx","components/chat/ContactsBox.jsx","components/chat/MessageApp.jsx","store/actions/messageActions.js","components/auth/Logout.jsx","store/SocketObserver.js","App.jsx","store/reducers/UserAuthReducer.js","store/reducers/ContactsReducer.js","store/reducers/MessageReducer.js","store/reducers/SignInReducer.js","store/reducers/ErrorReducer.js","store/reducers/NavbarReducer.js","index.jsx"],"names":["loginRequest","loginUserSaga","logoutRequest","logoutUserSaga","signInRequest","signInUserSaga","userRootSaga","action","user","regenerator_default","a","wrap","_context","prev","next","axios","post","payload","sent","put","type","data","t0","stop","_marked","_context2","takeEvery","_marked2","_context3","get","_marked3","_context4","_marked4","response","_context5","error","console","log","_marked5","_context6","_marked6","_context7","all","_marked7","sendMessageRequest","sendMessageSaga","getMessagesRequest","getMessagesSaga","messageRootSaga","messageSaga_marked","messageSaga_marked2","messageSaga_marked3","takeLatest","messageSaga_marked4","messageSaga_marked5","mainSaga","mainSaga_marked","SignedInLinks","props","react_default","createElement","id","className","Link","to","onClick","logoutUser","logout","store","dispatch","watchUserAuthorizedDone","RenderLinks","isLoggedIn","layout_SignedInLinks","SignedOutLinks","Navbar","href","this","handleClick","Navbar_RenderLinks","Component","connect","state","navbar","HomePage","SignIn","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","username","firstName","lastName","email","password","confirmPassword","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","objectSpread","defineProperty","target","value","preventDefault","signInCompleted","Redirect","onSubmit","htmlFor","onChange","signIn","signinError","LogIn","loginError","InputBox","message","handleMessage","MessageCard","owner","time","MessageBox","messages","length","map","key","chat_MessageCard","socket","io","store_SocketEmiter","emit","roomId","_ref","contact","userSearchDone","ContactsSearch","handleInput","contactAdd","SocketEmiter","searchContactsRequest","addMewContactRequest","_this2","items","item","onInput","ContactButton","getAllMessages","cid","selectContactHandler","targets","deleteContactHandler","ContactsBox","deleteContactRequest","getContactListRequest","contacts","ContactButton_ContactButton","ContactsSearch_ContactsSearch","userId","searchItems","MessageApp","activeContact","sendMessage","ContactsBox_ContactsBox","chat_MessageBox","InputBox_InputBox","Logout","SocketObserver","on","asyncToGenerator","mark","_callee2","_x","apply","arguments","contactList","watchUserAuth","watchUserSearch","addNewContactDone","getContactListSuccess","watchMessages","getAllMessagesDone","watchDeleteContact","App","watchAll","BrowserRouter","layout_Navbar","Switch","Route","exact","path","render","chat_MessageApp","uid","HomePage_HomePage","auth_SignIn","auth_LogIn","initialState","inProgress","isFetching","newMessage","processing","messageError","contactError","open","__webpack_require__","d","__webpack_exports__","reducers","combineReducers","undefined","concat","toConsumableArray","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","src_App","document","getElementById","run","subscribe"],"mappings":"2PAUUA,cAoBAC,cAMAC,cAoBAC,cAMAC,cAyBAC,cAKeC,GAlFzB,SAAUN,EAAaO,GAAvB,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEiB,OAFjBF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBC,IAAMC,KAAK,oBAAqBT,EAAOU,SAF9D,OAGI,OADMT,EAFVI,EAAAM,KAAAN,EAAAE,KAAA,EAGUK,YAAI,CACRC,KAAM,qBACNH,QAAS,CACPT,KAAMA,EAAKa,KAAKb,QANxB,OAAAI,EAAAE,KAAA,gBAUI,OAVJF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAAAA,EAAAE,KAAA,GAUUK,YAAI,CACRC,KAAM,sBAXZ,QAaI,OAbJR,EAAAE,KAAA,GAaUK,YAAI,CACRC,KAAM,cACNH,QAAOL,EAAAU,KAfb,yBAAAV,EAAAW,SAAAC,EAAA,cAoBA,SAAUvB,IAAV,OAAAQ,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACE,OADFW,EAAAX,KAAA,EACQY,YAAU,uBAAwB1B,GAD1C,wBAAAyB,EAAAF,SAAAI,GAMA,SAAUzB,IAAV,OAAAO,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAEI,OAFJc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAEUC,IAAMc,IAAI,iBAFpB,OAGI,OAHJD,EAAAd,KAAA,EAGUK,YAAI,CACRC,KAAM,sBACNH,QAAS,CACPT,MAAM,KANd,OAAAoB,EAAAd,KAAA,gBAUI,OAVJc,EAAAf,KAAA,EAAAe,EAAAN,GAAAM,EAAA,SAAAA,EAAAd,KAAA,GAUUK,YAAI,CACRC,KAAM,qBAXZ,QAaI,OAbJQ,EAAAd,KAAA,GAaUK,YAAI,CACRC,KAAM,eACNH,QAAOW,EAAAN,KAfb,yBAAAM,EAAAL,SAAAO,EAAA,cAoBA,SAAU3B,IAAV,OAAAM,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACE,OADFiB,EAAAjB,KAAA,EACQY,YAAU,wBAAyBxB,GAD3C,wBAAA6B,EAAAR,SAAAS,GAMA,SAAU5B,EAAcG,GAAxB,IAAA0B,EAAA,OAAAxB,EAAAC,EAAAC,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAEqB,OAFrBoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAE2BC,IAAMC,KAAK,uBAAwB,CACxDR,KAAMD,EAAOU,UAHnB,WAEUgB,EAFVC,EAAAhB,MAKkBG,KAAKc,MALvB,CAAAD,EAAApB,KAAA,QAMM,OANNoB,EAAApB,KAAA,EAMYK,YAAI,CACRC,KAAM,sBACNH,QAASgB,EAASZ,OAR1B,OAAAa,EAAApB,KAAA,sBAWYmB,EAASE,MAXrB,QAAAD,EAAApB,KAAA,iBAeI,OAfJoB,EAAArB,KAAA,GAAAqB,EAAAZ,GAAAY,EAAA,SAcIE,QAAQC,IAARH,EAAAZ,IAdJY,EAAApB,KAAA,GAeUK,YAAI,CACRC,KAAM,qBAhBZ,QAkBI,OAlBJc,EAAApB,KAAA,GAkBUK,YAAI,CACRC,KAAM,eACNH,QAAOiB,EAAAZ,KApBb,yBAAAY,EAAAX,SAAAe,EAAA,eAyBA,SAAUjC,IAAV,OAAAI,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACE,OADFyB,EAAAzB,KAAA,EACQY,YAAU,wBAAyBtB,GAD3C,wBAAAmC,EAAAhB,SAAAiB,GAKe,SAAUlC,IAAV,OAAAG,EAAAC,EAAAC,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OACb,OADa2B,EAAA3B,KAAA,EACP4B,YAAI,CAACvC,IAAkBF,IAAiBI,MADjC,wBAAAoC,EAAAlB,SAAAoB,kBCpFLC,cA2BAC,cAMAC,cA8BAC,cAIeC,GAnEzB,SAAUJ,EAAmBrC,GAA7B,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAW,SAAA0B,GA2BA,SAAUJ,IAAV,OAAApC,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACI,OADJW,EAAAX,KAAA,EACUY,YAAU,uBAAwBkB,GAD5C,wBAAAnB,EAAAF,SAAA2B,GAMA,SAAUJ,EAAmBvC,GAA7B,OAAAE,EAAAC,EAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,wBAAAc,EAAAL,SAAA4B,GA8BA,SAAUJ,IAAV,OAAAtC,EAAAC,EAAAC,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACI,OADJiB,EAAAjB,KAAA,EACUsC,YAAW,uBAAwBN,GAD7C,wBAAAf,EAAAR,SAAA8B,GAIe,SAAUL,IAAV,OAAAvC,EAAAC,EAAAC,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACX,OADWoB,EAAApB,KAAA,EACL4B,YAAI,CAACK,IAAmBF,MADnB,wBAAAX,EAAAX,SAAA+B,kBCpEUC,GAAV,SAAUA,IAAV,OAAA9C,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,OADWF,EAAAE,KAAA,EACL4B,YAAI,CACNpC,IACA0C,MAHO,wBAAApC,EAAAW,SAAAiC,0FCWAC,EAfO,SAAAC,GACpB,OACEC,EAAAjD,EAAAkD,cAAA,MAAIC,GAAG,aAAaC,UAAU,8BAC5BH,EAAAjD,EAAAkD,cAAA,UACED,EAAAjD,EAAAkD,cAACG,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEFL,EAAAjD,EAAAkD,cAAA,UACED,EAAAjD,EAAAkD,cAACG,EAAA,EAAD,CAAMC,GAAG,UAAUC,QAASP,EAAMQ,YAAlC,aCMOT,EAbO,WACpB,OACEE,EAAAjD,EAAAkD,cAAA,MAAIC,GAAG,aAAaC,UAAU,IAC5BH,EAAAjD,EAAAkD,cAAA,UACED,EAAAjD,EAAAkD,cAACG,EAAA,EAAD,CAAMC,GAAG,WAAT,YAEFL,EAAAjD,EAAAkD,cAAA,UACED,EAAAjD,EAAAkD,cAACG,EAAA,EAAD,CAAMC,GAAG,UAAT,aCCD,SAASG,IACZC,GAAMC,SAAS,CACXjD,KAAM,wBACNH,QAAS,MAWV,SAASqD,GAAwBjD,GACpC+C,GAAMC,SAAS,CACXjD,KAAM,YACNH,QAAS,CACLT,KAAMa,KCpBlB,IAAMkD,GAAc,SAAA/D,GAElB,OADAA,EAAOA,EAAKA,MACHgE,WACAb,EAAAjD,EAAAkD,cAACa,EAAD,CAAejE,KAAMA,EAAKa,KAAM6C,WAAYC,IACzCR,EAAAjD,EAAAkD,cAACc,EAAD,CAAgBlE,KAAMA,EAAKa,QAGnCsD,yLCXFP,GAAMC,SAAS,CACXjD,KAAM,mDDeV,OACEuC,EAAAjD,EAAAkD,cAAA,WACED,EAAAjD,EAAAkD,cAAA,KAAGgB,KAAK,IAAId,UAAU,QAAtB,QAGAH,EAAAjD,EAAAkD,cAAA,KAAGK,QAASY,KAAKC,YAAahB,UAAU,eACxCH,EAAAjD,EAAAkD,cAACmB,GAAD,CAAavE,KAAMqE,KAAKnB,MAAMlD,eAXjBwE,aAqBNC,eAJS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAMC,SAGDF,CAAyBN,IEnCnBS,oLAEjB,OACEzB,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,0BACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,kBACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,QACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,mBAEjBH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,QACbH,EAAAjD,EAAAkD,cAAA,uDACAD,EAAAjD,EAAAkD,cAAA,UACED,EAAAjD,EAAAkD,cAAA,kBACAD,EAAAjD,EAAAkD,cAAA,oBACAD,EAAAjD,EAAAkD,cAAA,oCAKND,EAAAjD,EAAAkD,cAAA,QAAME,UAAU,IACdH,EAAAjD,EAAAkD,cAAA,WACAD,EAAAjD,EAAAkD,cAAA,MAAIE,UAAU,cAAd,4BACAH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,iBACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,cACfH,EAAAjD,EAAAkD,cAAA,iCAEFD,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,cACfH,EAAAjD,EAAAkD,cAAA,oBAEFD,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,iBACfH,EAAAjD,EAAAkD,cAAA,yBAIND,EAAAjD,EAAAkD,cAAA,uBApC8BoB,uCCGhCK,eACJ,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAQ,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAd,KAAMnB,KAEDwB,MAAQ,CACXU,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAGnBX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,GAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,GAAA,EAAAb,CAAAD,IAbHA,4EAgBNgB,GACXzB,KAAK0B,SAALhB,OAAAiB,GAAA,EAAAjB,CAAA,GACKV,KAAKK,MADVK,OAAAkB,GAAA,EAAAlB,CAAA,GAEGe,EAAEI,OAAO7C,GAAKyC,EAAEI,OAAOC,8CAGfL,GJVR,IAAgB9F,EIYnB8F,EAAEM,iBJZiBpG,EIaZqE,KAAKK,MJZZd,GAAMC,SAAS,CACXjD,KAAM,wBACNH,QAAST,qCIcb,OAAIqE,KAAKnB,MAAMmD,gBACNlD,EAAAjD,EAAAkD,cAACkD,EAAA,EAAD,CAAU9C,GAAG,WAGlBL,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,QAAMmD,SAAUlC,KAAKwB,aAAcvC,UAAU,aAC1Ce,KAAKnB,MAAMvB,MAAQwB,EAAAjD,EAAAkD,cAAA,SAAIiB,KAAKnB,MAAMvB,OAAa,KAChDwB,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,SAAf,UACArD,EAAAjD,EAAAkD,cAAA,SAAOqD,SAAUpC,KAAKqB,aAAcrC,GAAG,QAAQzC,KAAK,WAEtDuC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,aAAf,cACArD,EAAAjD,EAAAkD,cAAA,SAAOqD,SAAUpC,KAAKqB,aAAcrC,GAAG,YAAYzC,KAAK,UAE1DuC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,YAAf,aACArD,EAAAjD,EAAAkD,cAAA,SAAOqD,SAAUpC,KAAKqB,aAAcrC,GAAG,WAAWzC,KAAK,UAEzDuC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,YAAf,YACArD,EAAAjD,EAAAkD,cAAA,SAAOqD,SAAUpC,KAAKqB,aAAcrC,GAAG,WAAWzC,KAAK,UAEzDuC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,YAAf,YACArD,EAAAjD,EAAAkD,cAAA,SACEqD,SAAUpC,KAAKqB,aACfrC,GAAG,WACHzC,KAAK,cAGTuC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,mBAAf,oBACArD,EAAAjD,EAAAkD,cAAA,SACEqD,SAAUpC,KAAKqB,aACfrC,GAAG,kBACHzC,KAAK,cAGTuC,EAAAjD,EAAAkD,cAAA,SAAOE,UAAU,gBAAgB1C,KAAK,SAASuF,MAAM,qBArE5C3B,aAkFNC,eALS,SAAAC,GAAK,MAAK,CAChC2B,gBAAiB3B,EAAMgC,OAAOL,gBAC9B1E,MAAO+C,EAAM/C,MAAMgF,cAGNlC,CAAyBI,ICnFlC+B,eACJ,SAAAA,EAAY1D,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAuC,IACjB9B,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAA6B,GAAAzB,KAAAd,KAAMnB,KAEDwB,MAAQ,CACXa,MAAO,GACPC,SAAU,IAGZV,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,GAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,GAAA,EAAAb,CAAAD,IATHA,4EAWNgB,GACXzB,KAAK0B,SAALhB,OAAAiB,GAAA,EAAAjB,CAAA,GACKV,KAAKK,MADVK,OAAAkB,GAAA,EAAAlB,CAAA,GAEGe,EAAEI,OAAO7C,GAAKyC,EAAEI,OAAOC,8CAGfL,GLlBR,IAAe9F,EKmBlB8F,EAAEM,iBLnBgBpG,EKoBZqE,KAAKK,MLnBXd,GAAMC,SAAS,CACXjD,KAAM,uBACNH,QAAST,qCKoBb,OACEmD,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,QAAMmD,SAAUlC,KAAKwB,aAAcvC,UAAU,aAC1Ce,KAAKnB,MAAMvB,MAAQwB,EAAAjD,EAAAkD,cAAA,SAAIiB,KAAKnB,MAAMvB,OAAa,KAChDwB,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,SAAf,UACArD,EAAAjD,EAAAkD,cAAA,SAAOqD,SAAUpC,KAAKqB,aAAcrC,GAAG,QAAQzC,KAAK,UAEtDuC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,YAAf,YACArD,EAAAjD,EAAAkD,cAAA,SAAOqD,SAAUpC,KAAKqB,aAAcrC,GAAG,WAAWzC,KAAK,cAEzDuC,EAAAjD,EAAAkD,cAAA,SAAOE,UAAU,gBAAgB1C,KAAK,SAASuF,MAAM,oBAnC3C3B,aA8CLC,eAJS,SAAAC,GAAK,MAAK,CAChC/C,MAAO+C,EAAM/C,MAAMkF,aAGNpC,CAAyBmC,IChDnBE,eACnB,SAAAA,EAAY5D,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAyC,IACjBhC,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAAd,KAAMnB,KAEDwB,MAAQ,CACXqC,QAAS,IAGXjC,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,GAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,GAAA,EAAAb,CAAAD,IARHA,4EAWNgB,GACXzB,KAAK0B,SAALhB,OAAAiB,GAAA,EAAAjB,CAAA,GACKV,KAAKK,MADVK,OAAAkB,GAAA,EAAAlB,CAAA,GAEGe,EAAEI,OAAO7C,GAAKyC,EAAEI,OAAOC,8CAIfL,GAEXA,EAAEM,iBACF/B,KAAKnB,MAAM8D,cAAc3C,KAAKK,MAAMqC,SACpC1C,KAAK0B,SAAS,CAAEgB,QAAS,sCAIzB,OACE5D,EAAAjD,EAAAkD,cAAA,QAAMmD,SAAUlC,KAAKwB,aAAcvC,UAAU,aAC3CH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,YAAUqD,SAAUpC,KAAKqB,aAAcrC,GAAG,UAAUC,UAAU,KAC9DH,EAAAjD,EAAAkD,cAAA,SAAOxC,KAAK,SAAS0C,UAAU,SAAS6C,MAAM,kBA/BlB3B,aCgBvByC,GAXK,SAAA/D,GAClB,OACEC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAW,SAPNtD,EAOsBkD,EAAM6D,QAAQG,MAN5ClH,EAAa,QACL,SAMRmD,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,gBACbH,EAAAjD,EAAAkD,cAAA,SAAIF,EAAM6D,QAAQA,SAClB5D,EAAAjD,EAAAkD,cAAA,KAAGE,UAAU,IAAIJ,EAAM6D,QAAQI,QAVzB,IAAAnH,GCwBCoH,GAtBI,SAAAlE,GACjB,OAAIA,EAAMmE,SAASA,SAASC,OAAS,EAEjCnE,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACZJ,EAAMmE,SAASA,SAASE,IAAI,SAAAR,GAC3B,OACE5D,EAAAjD,EAAAkD,cAAA,OAAKoE,IAAKT,EAAQ1D,IAChBF,EAAAjD,EAAAkD,cAACqE,GAAD,CAAaV,QAASA,EAASS,IAAKT,EAAQ1D,SAQpDF,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,6BChBOsE,UAFAC,GAAG,yBC2BHC,GAAA,kHA1BW/G,GAClB6G,GAAOG,KAAK,oBAAqBhH,gDAEhBA,GACjB6G,GAAOG,KAAK,uBAAwBhH,mDAGpC6G,GAAOG,KAAK,gEAEDC,GACXJ,GAAOG,KAAK,wBAAyBC,gDAEpBjH,GACjB6G,GAAOG,KAAK,gBAAiBhH,0CAK9B,IAFCwG,EAEDU,EAFCV,SACAW,EACDD,EADCC,QAEAN,GAAOG,KAAK,cAAe,CACvBR,WACAW,sBCeL,SAASC,GAAepH,GAC3B+C,GAAMC,SAAS,CACXjD,KAAM,oBACNH,QAASI,QCtCIqH,eACnB,SAAAA,EAAYhF,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAA6D,IACjBpD,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAAmD,GAAA/C,KAAAd,KAAMnB,KAEDiF,YAAcrD,EAAKqD,YAAYxC,KAAjBZ,OAAAa,GAAA,EAAAb,CAAAD,IACnBA,EAAKsD,WAAatD,EAAKsD,WAAWzC,KAAhBZ,OAAAa,GAAA,EAAAb,CAAAD,IAJDA,2EAOPgB,GACVuC,GAAaC,sBAAsBxC,EAAEI,OAAOC,0CAGnCL,GDEN,IAAuBjF,ICDZiF,EAAEI,OAAO7C,GDEvBgF,GAAaE,qBAAqB1H,GAClC+C,GAAMC,SAAS,CACXjD,KAAM,6DCFH,IAAA4H,EAAAnE,KACP,OACElB,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,mBACZe,KAAKnB,MAAMuF,OACVpE,KAAKnB,MAAMuF,MAAMlB,IAAI,SAAAmB,GACnB,OACEvF,EAAAjD,EAAAkD,cAAA,UACEE,UAAU,GACVG,QAAS+E,EAAKJ,WACd/E,GAAIqF,EAAKrF,GACTmE,IAAKkB,EAAKrF,IAETqF,EAAKtD,YAIdjC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,eACbH,EAAAjD,EAAAkD,cAAA,SAAOoD,QAAQ,aAAf,uBACArD,EAAAjD,EAAAkD,cAAA,SAAOC,GAAG,YAAYzC,KAAK,OAAO+H,QAAStE,KAAK8D,uBAjCd3D,iBCDvBoE,gMACE9C,GFEhB,IAAuBzC,KEDZyC,EAAEI,OAAO7C,KFKnBgF,GAAaQ,eAAexF,GAC5BO,GAAMC,SAAS,CACXjD,KAAM,iBACNH,QAAS4C,KALbzB,QAAQC,IAAI,0CEAhB,OACEsB,EAAAjD,EAAAkD,cAAA,OAAKoE,IAAKnD,KAAKnB,MAAM8E,QAAQc,IAAKxF,UAAU,gBAC1CH,EAAAjD,EAAAkD,cAAA,UACEK,QAASY,KAAK0E,qBACd1F,GAAIgB,KAAKnB,MAAM8E,QAAQc,IACvBxF,UAAU,UAETe,KAAKnB,MAAM8E,QAAQgB,QAAQzB,IAAI,SAAAvH,GAC9B,OAAOA,EAAOA,EAAKoF,SAAW,QAGlCjC,EAAAjD,EAAAkD,cAAA,UACEE,UAAU,eACVD,GAAIgB,KAAKnB,MAAM8E,QAAQc,IACvBrF,QAASY,KAAKnB,MAAM+F,sBAHtB,aAhBmCzE,aCQtB0E,eACnB,SAAAA,EAAYhG,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAA6E,IACjBpE,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAAmE,GAAA/D,KAAAd,KAAMnB,KAED+F,qBAAuBnE,EAAKmE,qBAAqBtD,KAA1BZ,OAAAa,GAAA,EAAAb,CAAAD,IAHXA,oFAKEgB,GHQhB,IAAuBjF,IGPZiF,EAAEI,OAAO7C,GHQvBgF,GAAac,qBAAqBtI,GAClC+C,GAAMC,SAAS,CACXjD,KAAM,uEGPVyH,GAAae,yDAEN,IAAAZ,EAAAnE,KACP,OACElB,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,gBACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,IACbH,EAAAjD,EAAAkD,cAAA,sBACCiB,KAAKnB,MAAMmG,SAAS9B,IAAI,SAAAS,GACvB,OAAOA,EACL7E,EAAAjD,EAAAkD,cAACkG,GAAD,CACE9B,IAAKQ,EAAQc,IACbd,QAASA,EACTiB,qBAAsBT,EAAKS,uBAE3B,OAEN9F,EAAAjD,EAAAkD,cAACmG,GAAD,CACEC,OAAQnF,KAAKnB,MAAMsG,OACnBf,MAAOpE,KAAKnB,MAAMuG,uBA5BWjF,aCHnCkF,eACJ,SAAAA,EAAYxG,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAV,KAAAqF,IACjB5E,EAAAC,OAAAE,EAAA,EAAAF,CAAAV,KAAAU,OAAAG,EAAA,EAAAH,CAAA2E,GAAAvE,KAAAd,KAAMnB,KAED8D,cAAgBlC,EAAKkC,cAAcrB,KAAnBZ,OAAAa,GAAA,EAAAb,CAAAD,IAHJA,6EAMLiC,GCVT,IAAqBlG,IDWZ,CACVwG,SAAUN,EACViB,QAAS3D,KAAKnB,MAAMmG,SAASM,eCZ/BtB,GAAauB,YAAY/I,GACzB+C,GAAMC,SAAS,CACXjD,KAAM,uBACNH,QAASI,qCDab,OACEsC,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,kBACbH,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,qBACbH,EAAAjD,EAAAkD,cAACyG,GAAD,CACEL,OAAQnF,KAAKnB,MAAMsG,OACnBH,SAAUhF,KAAKnB,MAAMmG,SAASZ,MAC9BkB,cAAetF,KAAKnB,MAAMmG,SAASM,cACnCF,YAAapF,KAAKnB,MAAMuG,eAG5BtG,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,qBACbH,EAAAjD,EAAAkD,cAAC0G,GAAD,CAAYzC,SAAUhD,KAAKnB,MAAMmE,WACjClE,EAAAjD,EAAAkD,cAAC2G,GAAD,CACE/C,cAAe3C,KAAK2C,cACpB2C,cAAetF,KAAKnB,MAAMmG,SAASM,yBA5BtBnF,aA0CVC,eANS,SAAAC,GAAK,MAAK,CAChC2E,SAAU3E,EAAM2E,SAChBhC,SAAU3C,EAAM2C,SAChBoC,YAAa/E,EAAM2E,SAASI,cAGfhF,CAAyBiF,IEhDzB,SAASM,KACtB,OACE7G,EAAAjD,EAAAkD,cAAA,OAAKE,UAAU,aACbH,EAAAjD,EAAAkD,cAAA,mDCoES6G,cA1Db,SAAAA,EAAYvC,GAAS3C,OAAAC,EAAA,EAAAD,CAAAV,KAAA4F,GACnB5F,KAAKqD,OAASA,uKAKdrD,KAAKqD,OAAOwC,GAAG,iBAAkB,SAAArJ,IAClB,IAATA,GACFiD,GAAwBjD,0PAM5BwD,KAAKqD,OAAOwC,GAAG,iBAAf,eAAAnC,EAAAhD,OAAAoF,GAAA,EAAApF,CAAA9E,EAAAC,EAAAkK,KAAiC,SAAAC,EAAMxJ,GAAN,OAAAZ,EAAAC,EAAAC,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAC/B2H,GAAepH,GADgB,wBAAAI,EAAAF,SAAAsJ,MAAjC,gBAAAC,GAAA,OAAAvC,EAAAwC,MAAAlG,KAAAmG,YAAA,2PAMAnG,KAAKqD,OAAOwC,GAAG,oBAAqB,SAAAzI,GAClC4G,GAAae,qRAKf/E,KAAKqD,OAAOwC,GAAG,qBAAsB,SAAAO,GPKlC,IAAgC5J,IOJV4J,EPKzB7G,GAAMC,SAAS,CACXjD,KAAM,4BACNH,QAASI,qJOHbwD,KAAKqD,OAAOwC,GAAG,qBAAsB,SAAA7C,GFjClC,IAA4BxG,IEkCVwG,EFjCrBzD,GAAMC,SAAS,CACXjD,KAAM,mBACNH,QAASI,8CEmCbwD,KAAKqD,OAAOwC,GAAG,aAAc,SAAAnD,GF/B1B,IAA2BlG,IEgCVkG,EF/BpBnD,GAAMC,SAAS,CACXjD,KAAM,cACNH,QAASI,mDEiCbwD,KAAKqD,OAAOwC,GAAG,iBAAkB,WAC/BtI,QAAQC,IAAI,GACZwG,GAAae,sKAKf/E,KAAKqG,gBACLrG,KAAKsG,kBACLtG,KAAKuG,oBACLvG,KAAKwG,wBACLxG,KAAKyG,gBACLzG,KAAK0G,qBACL1G,KAAK2G,gIC5CHC,uMAEFvD,GAAOG,KAAK,aAEK,IAAIoC,GAAevC,GAAQ9D,IACnCsH,4CAEF,IAAApG,EAAAT,KACP,OACElB,EAAAjD,EAAAkD,cAAC+H,EAAA,EAAD,KACEhI,EAAAjD,EAAAkD,cAAA,OAAKC,GAAG,OACNF,EAAAjD,EAAAkD,cAACgI,GAAD,CAAQpL,KAAMqE,KAAKnB,MAAMlD,OACzBmD,EAAAjD,EAAAkD,cAACiI,EAAA,EAAD,KACElI,EAAAjD,EAAAkD,cAACkI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,WACN,OAAI3G,EAAK5B,MAAMlD,KAAKgE,WACXb,EAAAjD,EAAAkD,cAACsI,GAAD,CAAYlC,OAAQ1E,EAAK5B,MAAMlD,KAAKa,KAAK8K,MACtCxI,EAAAjD,EAAAkD,cAACwI,GAAD,SAIhBzI,EAAAjD,EAAAkD,cAACkI,EAAA,EAAD,CACEE,KAAK,UACLC,OAAQ,WACN,OAAK3G,EAAK5B,MAAMlD,KAAKgE,WACTb,EAAAjD,EAAAkD,cAACkD,EAAA,EAAD,CAAU9C,GAAG,MADeL,EAAAjD,EAAAkD,cAACyI,GAAD,SAK5C1I,EAAAjD,EAAAkD,cAACkI,EAAA,EAAD,CACEE,KAAK,SACLC,OAAQ,WACN,OAAK3G,EAAK5B,MAAMlD,KAAKgE,WACTb,EAAAjD,EAAAkD,cAACkD,EAAA,EAAD,CAAU9C,GAAG,MADeL,EAAAjD,EAAAkD,cAAC0I,GAAD,SAI5C3I,EAAAjD,EAAAkD,cAACkI,EAAA,EAAD,CACEE,KAAK,UACLC,OAAQ,WACN,OAAOtI,EAAAjD,EAAAkD,cAAC4G,GAAD,mBAzCLxF,cAyDHC,eANS,SAAAC,GAAK,MAAK,CAChC1E,KAAM0E,EAAM1E,OAGa,GAEZyE,CAGbwG,ICrFIc,GAAe,CACjBlL,KAAM,GACNmD,YAAY,EACZgI,YAAY,GCHVD,GAAe,CACjBtC,YAAa,GACbhB,MAAO,GACPwD,YAAY,EACZtC,cAAe,aCJboC,GAAe,CACnB1E,SAAU,GACV6E,YAAY,EACZC,YAAY,GCHRJ,GAAe,CACjB1F,iBAAiB,EACjB2F,YAAY,GCFVD,GAAe,CACjBpF,YAAa,GACbyF,aAAc,GACdC,aAAc,GACdxF,WAAY,ICJVkF,GAAe,CACjBO,MAAM,GCDVC,EAAAC,EAAAC,EAAA,0BAAA7I,KAiBA,IAAM8I,GAAWC,YAAgB,CAC/B3M,KNZa,WAGT,IAHU0E,EAGV8F,UAAAlD,OAAA,QAAAsF,IAAApC,UAAA,GAAAA,UAAA,GAHkBuB,GAGlBhE,EAAAyC,UAAAlD,OAAA,EAAAkD,UAAA,QAAAoC,EAFFhM,EAEEmH,EAFFnH,KACAH,EACEsH,EADFtH,QAEA,OAAQG,GACJ,IAAK,YACD,MAAO,CACHoL,YAAY,EACZhI,YAAY,EACZnD,KAAMJ,GAEd,IAAK,eACD,MAAO,CACHuL,YAAY,EACZhI,YAAY,EACZnD,KAAM,IAEd,IAAK,qBACD,OAAOkE,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEIsH,YAAY,IAEpB,IAAK,qBACD,OAAOjH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEI7D,KAAMJ,EACNuD,YAAY,EACZgI,YAAY,IAEpB,IAAK,kBACD,OAAOjH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEIsH,YAAY,IAEpB,IAAK,sBAIL,IAAK,mBACD,OAAOjH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,GAEX,QACI,OAAOA,IM9BjB2E,SLZa,WAGT,IAHU3E,EAGV8F,UAAAlD,OAAA,QAAAsF,IAAApC,UAAA,GAAAA,UAAA,GAHkBuB,GAGlBhE,EAAAyC,UAAAlD,OAAA,EAAAkD,UAAA,QAAAoC,EAFFhM,EAEEmH,EAFFnH,KACAH,EACEsH,EADFtH,QAEA,OAAQG,GACJ,IAAK,iBACD,OAAOmE,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEIiF,cAAelJ,IAEvB,IAAK,uBACD,OAAOsE,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEIuH,YAAY,IAEpB,IAAK,4BACD,OAAOlH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEI+D,MAAOhI,EACPwL,YAAY,IAEpB,IAAK,oBACD,OAAOlH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEI+D,MAAO,GACPwD,YAAY,IAEpB,IAAK,uBACD,OAAOlH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEIuH,YAAY,IAEpB,IAAK,oBACD,OAAOlH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEI+E,YAAahJ,EACbwL,YAAY,IAEpB,IAAK,oBACD,OAAOlH,OAAAiB,GAAA,EAAAjB,CAAA,GACAL,EADP,CAEI+E,YAAa,GACbwC,YAAY,IAEpB,QACI,OAAOvH,IKhCjB2C,SJda,WAGT,IAHU3C,EAGV8F,UAAAlD,OAAA,QAAAsF,IAAApC,UAAA,GAAAA,UAAA,GAHkBuB,GAGlBhE,EAAAyC,UAAAlD,OAAA,EAAAkD,UAAA,QAAAoC,EAFJhM,EAEImH,EAFJnH,KACAH,EACIsH,EADJtH,QAEA,OAAQG,GACN,IAAK,cACH,OAAOmE,OAAAiB,GAAA,EAAAjB,CAAA,GACFL,EADL,CAEEyH,YAAY,EACZ9E,SAAQ,GAAAwF,OAAA9H,OAAA+H,GAAA,EAAA/H,CAAML,EAAM2C,UAAZ,CAAsB5G,MAElC,IAAK,mBAML,IAAK,uBACH,OAAOsE,OAAAiB,GAAA,EAAAjB,CAAA,GACFL,EADL,CAEEyH,YAAY,EACZ9E,SAAU5G,IAEd,QACE,OAAOiE,IITXgC,OHhBa,WAGT,IAHUhC,EAGV8F,UAAAlD,OAAA,QAAAsF,IAAApC,UAAA,GAAAA,UAAA,GAHkBuB,GAGlBhE,EAAAyC,UAAAlD,OAAA,EAAAkD,UAAA,QAAAoC,EAFFhM,EAEEmH,EAFFnH,KAEEmH,EADFtH,QAEA,OAAQG,GACJ,IAAK,sBACD,OAAOmE,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACI2B,iBAAiB,EACjB2F,YAAY,IAEpB,IAAK,sBACD,OAAOjH,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACI2B,iBAAiB,IAEzB,IAAK,mBACD,OAAOtB,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACI2B,iBAAiB,IAEzB,QACI,MAAO,CACHA,iBAAiB,KGH/B1E,MFfa,WAGT,IAHU+C,EAGV8F,UAAAlD,OAAA,QAAAsF,IAAApC,UAAA,GAAAA,UAAA,GAHkBuB,GAGlBhE,EAAAyC,UAAAlD,OAAA,EAAAkD,UAAA,QAAAoC,EAFFhM,EAEEmH,EAFFnH,KACAH,EACEsH,EADFtH,QAEA,OAAQG,GACJ,IAAK,gBACD,OAAOmE,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACI0H,aAAc3L,EAAQsG,UAE9B,IAAK,eACD,OAAOhC,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACIiC,YAAalG,EAAQsG,UAE7B,IAAK,cACD,OAAOhC,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACImC,WAAYpG,EAAQsG,UAE5B,IAAK,gBACD,OAAOhC,OAAAiB,GAAA,EAAAjB,CAAA,GAAKL,EAAZ,CACI2H,aAAc5L,EAAQsG,UAE9B,QACI,OAAOrC,IENjBC,ODnBa,WAET,IAFUD,EAEV8F,UAAAlD,OAAA,QAAAsF,IAAApC,UAAA,GAAAA,UAAA,GAFkBuB,GAGpB,QADEvB,UAAAlD,OAAA,EAAAkD,UAAA,QAAAoC,GADFhM,MAII,IAAK,gBACD,MAAO,CACH0L,MAAO5H,EAAM4H,MAErB,QACI,OAAO5H,MCYbqI,GAAiBC,cAEVpJ,GAAQqJ,YACnBP,GACAQ,YACEC,YAAgBJ,IAEhBK,OAAOC,8BAAgCD,OAAOC,iCAOlD,SAAS5B,KACP6B,IAAS7B,OACPtI,EAAAjD,EAAAkD,cAACmK,EAAA,EAAD,CAAU3J,MAAOA,IACfT,EAAAjD,EAAAkD,cAACoK,GAAD,OAEFC,SAASC,eAAe,SAP5BX,GAAeY,IAAI5K,GAWnB0I,KAEA7H,GAAMgK,UAAUnC","file":"static/js/main.fb30e8f5.chunk.js","sourcesContent":["import {\r\n  put,\r\n  all,\r\n  takeEvery\r\n} from \"redux-saga/effects\";\r\n\r\nimport axios from \"axios\";\r\n\r\n//LOGIN SAGA\r\n\r\nfunction* loginRequest(action) {\r\n  try {\r\n    const user = yield axios.post(\"/login/local/auth\", action.payload);\r\n    yield put({\r\n      type: \"USER_FETCH_SUCCESS\",\r\n      payload: {\r\n        user: user.data.user\r\n      }\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: \"USER_FETCH_FAILED\"\r\n    });\r\n    yield put({\r\n      type: \"LOGIN_ERROR\",\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loginUserSaga() {\r\n  yield takeEvery(\"USER_FETCH_REQUESTED\", loginRequest);\r\n}\r\n\r\n//LOGOUT SAGA\r\n\r\nfunction* logoutRequest() {\r\n  try {\r\n    yield axios.get(\"/login/logout\");\r\n    yield put({\r\n      type: \"USER_LOGOUT_SUCCESS\",\r\n      payload: {\r\n        user: false\r\n      }\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: \"USER_LOGOUT_FAIL\"\r\n    });\r\n    yield put({\r\n      type: \"SIGNIN_ERROR\",\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logoutUserSaga() {\r\n  yield takeEvery(\"USER_LOGOUT_REQUESTED\", logoutRequest);\r\n}\r\n\r\n//SignIn Saga\r\n\r\nfunction* signInRequest(action) {\r\n  try {\r\n    const response = yield axios.post(\"/login/local/newUser\", {\r\n      user: action.payload\r\n    });\r\n    if (!response.data.error) {\r\n      yield put({\r\n        type: \"USER_SIGNUP_SUCCESS\",\r\n        payload: response.data\r\n      });\r\n    } else {\r\n      throw response.error;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put({\r\n      type: \"USER_SIGNIN_FAIL\"\r\n    });\r\n    yield put({\r\n      type: \"SIGNIN_ERROR\",\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nfunction* signInUserSaga() {\r\n  yield takeEvery(\"USER_SIGNIN_REQUESTED\", signInRequest);\r\n}\r\n\r\n// Root saga\r\nexport default function* userRootSaga() {\r\n  yield all([logoutUserSaga(), loginUserSaga(), signInUserSaga()]);\r\n}","import {\r\n    all,\r\n    takeEvery,\r\n    takeLatest\r\n} from \"redux-saga/effects\";\r\n\r\n//SEND MESSAGE\r\n\r\nfunction* sendMessageRequest(action) {\r\n    /*\r\n    try {\r\n        console.log(action);\r\n        yield db\r\n            .collection(\"messages\")\r\n            .doc(`/${action.payload.messagesID}`)\r\n            .update({\r\n                messages: action.payload.message\r\n            });\r\n        yield put({\r\n            type: \"SEND_MESSAGE_SUCCESS\"\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type: \"SEND_MESSAGE_FAIL\"\r\n        });\r\n        yield put({\r\n            type: \"MESSAGE_ERROR\",\r\n            payload: error\r\n        });\r\n    }\r\n    */\r\n\r\n}\r\n\r\n\r\nfunction* sendMessageSaga() {\r\n    yield takeEvery(\"SEND_MESSAGE_REQUEST\", sendMessageRequest);\r\n}\r\n\r\n//GET MESSAGES\r\n\r\nfunction* getMessagesRequest(action) {\r\n    /*\r\n    try {\r\n        const query = yield db\r\n            .collection(\"messages\")\r\n            .where(\"contactKey\", \"==\", action.payload)\r\n            .get();\r\n        let data = {};\r\n        yield query.forEach(item => {\r\n            data = {\r\n                data: item.data(),\r\n                id: item.id\r\n            };\r\n        });\r\n        console.log(data);\r\n        yield put({\r\n            \r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type: \"GET_MESSAGES_FAIL\"\r\n        });\r\n        yield put({\r\n            type: \"MESSAGE_ERROR\",\r\n            payload: error\r\n        });\r\n    }\r\n    */\r\n}\r\n\r\nfunction* getMessagesSaga() {\r\n    yield takeLatest(\"GET_MESSAGES_REQUEST\", getMessagesRequest);\r\n}\r\n\r\nexport default function* messageRootSaga() {\r\n    yield all([getMessagesSaga(), sendMessageSaga()]);\r\n}","import userRootSaga from './userSaga'\r\nimport messageRootSaga from './messageSaga'\r\n\r\nimport {\r\n    all\r\n} from 'redux-saga/effects';\r\n\r\nexport default function* mainSaga() {\r\n    yield all([\r\n        userRootSaga(),\r\n        messageRootSaga()\r\n    ])\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n      <li>\r\n        <Link to=\"/user\">User</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/logout\" onClick={props.logoutUser}>\r\n          Logout\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SignedInLinks = () => {\r\n  return (\r\n    <ul id=\"nav-mobile\" className=\"\">\r\n      <li>\r\n        <Link to=\"/signin\">Sign In</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Log In</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedInLinks;\r\n","import {\r\n    store\r\n} from \"../../index\";\r\n\r\nexport function login(user) {\r\n    store.dispatch({\r\n        type: \"USER_FETCH_REQUESTED\",\r\n        payload: user\r\n    });\r\n}\r\n\r\nexport function logout() {\r\n    store.dispatch({\r\n        type: \"USER_LOGOUT_REQUESTED\",\r\n        payload: \"1\"\r\n    });\r\n}\r\n\r\nexport function signIn(user) {\r\n    store.dispatch({\r\n        type: \"USER_SIGNIN_REQUESTED\",\r\n        payload: user\r\n    });\r\n}\r\n\r\nexport function watchUserAuthorizedDone(data) {\r\n    store.dispatch({\r\n        type: \"USER_AUTH\",\r\n        payload: {\r\n            user: data\r\n        }\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nimport { logout } from \"../../store/actions/userActions\";\r\nimport { navbarAction } from \"../../store/actions/navbarActions\";\r\n\r\nconst RenderLinks = user => {\r\n  user = user.user;\r\n  if (user.isLoggedIn)\r\n    return <SignedInLinks user={user.data} logoutUser={logout} />;\r\n  else return <SignedOutLinks user={user.data} />;\r\n};\r\n\r\nclass Navbar extends Component {\r\n  handleClick() {\r\n    navbarAction();\r\n  }\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <a href=\"/\" className=\"logo\">\r\n          Home\r\n        </a>\r\n        <p onClick={this.handleClick} className=\"burger-nav\" />\r\n        <RenderLinks user={this.props.user} />\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  navbar: state.navbar\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import {\r\n    store\r\n} from \"../../index\"\r\n\r\nexport function navbarAction() {\r\n    store.dispatch({\r\n        type: \"NAVBAR_ACTION\"\r\n    })\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container landing-page\">\r\n        <div className=\"card main-card\">\r\n          <div className=\"card\">\r\n            <div className=\"main-card-img\" />\r\n          </div>\r\n          <div className=\"card\">\r\n            <h3>Firebase powered web communicator project</h3>\r\n            <ul>\r\n              <li>Fast</li>\r\n              <li>Secure</li>\r\n              <li>Reliable and Simple</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <main className=\"\">\r\n          <hr />\r\n          <h1 className=\"text-white\">This app is powered by: </h1>\r\n          <div className=\"items-storage\">\r\n            <div className=\"card item\">\r\n              <div className=\"redux-img\" />\r\n              <h3>Redux & Redux Saga</h3>\r\n            </div>\r\n            <div className=\"card item\">\r\n              <div className=\"react-img\" />\r\n              <h3>React</h3>\r\n            </div>\r\n            <div className=\"card item\">\r\n              <div className=\"firebase-img\" />\r\n              <h3>Firebase</h3>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signIn } from \"../../store/actions/userActions\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    //will dispatch action\r\n    e.preventDefault();\r\n    signIn(this.state);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.signInCompleted) {\r\n      return <Redirect to=\"/login\" />;\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <form onSubmit={this.handleSubmit} className=\"card form\">\r\n            {this.props.error ? <p>{this.props.error}</p> : null}\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input onChange={this.handleChange} id=\"email\" type=\"email\" />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input onChange={this.handleChange} id=\"firstName\" type=\"text\" />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input onChange={this.handleChange} id=\"lastName\" type=\"text\" />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input onChange={this.handleChange} id=\"username\" type=\"text\" />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"password\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"confirmPassword\">Confirm password</label>\r\n              <input\r\n                onChange={this.handleChange}\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <input className=\"submit button\" type=\"submit\" value=\"Sign In\" />\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  signInCompleted: state.signIn.signInCompleted,\r\n  error: state.error.signinError\r\n});\r\n\r\nexport default connect(mapStateToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../store/actions/userActions\";\r\n\r\nclass LogIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    login(this.state);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"card form\">\r\n          {this.props.error ? <p>{this.props.error}</p> : null}\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">E-mail</label>\r\n            <input onChange={this.handleChange} id=\"email\" type=\"text\" />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input onChange={this.handleChange} id=\"password\" type=\"password\" />\r\n          </div>\r\n          <input className=\"submit button\" type=\"submit\" value=\"Log In\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.error.loginError\r\n});\r\n\r\nexport default connect(mapStateToProps)(LogIn);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class InputBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      message: \"\"\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      ...this.state,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    //will dispatch action\r\n    e.preventDefault();\r\n    this.props.handleMessage(this.state.message);\r\n    this.setState({ message: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"input-box\">\r\n        <div className=\"input-field\">\r\n          <textarea onChange={this.handleChange} id=\"message\" className=\"\" />\r\n          <input type=\"submit\" className=\"button\" value=\"Send\" />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst owner = user => {\r\n  if (user) return \"right\";\r\n  else return \"left\";\r\n};\r\n\r\nconst MessageCard = props => {\r\n  return (\r\n    <div className={\"card \" + owner(props.message.owner)}>\r\n      <div className=\"card-content\">\r\n        <p>{props.message.message}</p>\r\n        <p className=\"\">{props.message.time}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageCard;\r\n","import React from \"react\";\r\n\r\nimport MessageCard from \"./MessageCard\";\r\n\r\nconst MessageBox = props => {\r\n  if (props.messages.messages.length > 0) {\r\n    return (\r\n      <div className=\"message-box\">\r\n        {props.messages.messages.map(message => {\r\n          return (\r\n            <div key={message.id}>\r\n              <MessageCard message={message} key={message.id} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"message-box\">\r\n        <p>Empty</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MessageBox;\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:3001\");\r\n\r\nexport default socket;","import socket from \"../config/socketConfig\"\r\n\r\nclass SocketEmiter {\r\n    searchContactsRequest(data) {\r\n        socket.emit(\"UserSearchRequest\", data)\r\n    }\r\n    addMewContactRequest(data) {\r\n        socket.emit(\"AddNewContactRequest\", data)\r\n    }\r\n    getContactListRequest() {\r\n        socket.emit(\"GetContactListRequest\")\r\n    }\r\n    getAllMessages(roomId) {\r\n        socket.emit(\"GetAllMessagesRequest\", roomId)\r\n    }\r\n    deleteContactRequest(data) {\r\n        socket.emit(\"DeleteContact\", data)\r\n    }\r\n    sendMessage({\r\n        messages,\r\n        contact\r\n    }) {\r\n        socket.emit(\"SendMessage\", {\r\n            messages,\r\n            contact\r\n        })\r\n    }\r\n}\r\n\r\nexport default new SocketEmiter()","import {\r\n    store\r\n} from '../../index'\r\nimport SocketEmiter from '../SocketEmiter';\r\n\r\n\r\nexport function selectContact(id) {\r\n    if (!id) {\r\n        console.log('No id')\r\n    } else {\r\n        SocketEmiter.getAllMessages(id)\r\n        store.dispatch({\r\n            type: \"SELECT_CONTACT\",\r\n            payload: id\r\n        })\r\n    }\r\n}\r\n\r\nexport function addNewContact(data) {\r\n    SocketEmiter.addMewContactRequest(data);\r\n    store.dispatch({\r\n        type: \"ADD_NEW_CONTACT_REQUEST\",\r\n    })\r\n}\r\n\r\nexport function deleteContact(data) {\r\n    SocketEmiter.deleteContactRequest(data)\r\n    store.dispatch({\r\n        type: \"DELETE_CONTACT_REQUEST\",\r\n    })\r\n}\r\n\r\nexport function getContacts(user) {\r\n    store.dispatch({\r\n        type: \"GET_CONTACTS_REQUEST\",\r\n        payload: user\r\n    })\r\n}\r\n\r\nexport function userSearchDone(data) {\r\n    store.dispatch({\r\n        type: \"USERS_SEARCH_DONE\",\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport function getContactsListSuccess(data) {\r\n    store.dispatch({\r\n        type: \"GET_CONTACTS_LIST_SUCCESS\",\r\n        payload: data\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport SocketEmiter from \"../../store/SocketEmiter\";\r\nimport { addNewContact } from \"../../store/actions/contactsActions\";\r\n\r\nexport default class ContactsSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.contactAdd = this.contactAdd.bind(this);\r\n  }\r\n\r\n  handleInput(e) {\r\n    SocketEmiter.searchContactsRequest(e.target.value);\r\n  }\r\n\r\n  contactAdd(e) {\r\n    addNewContact(e.target.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"contacts-search\">\r\n        {this.props.items &&\r\n          this.props.items.map(item => {\r\n            return (\r\n              <button\r\n                className=\"\"\r\n                onClick={this.contactAdd}\r\n                id={item.id}\r\n                key={item.id}\r\n              >\r\n                {item.username}\r\n              </button>\r\n            );\r\n          })}\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"searchBox\">Search for contacts</label>\r\n          <input id=\"searchBox\" type=\"text\" onInput={this.handleInput} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { selectContact } from \"../../store/actions/contactsActions\";\r\n\r\nexport default class ContactButton extends Component {\r\n  selectContactHandler(e) {\r\n    selectContact(e.target.id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div key={this.props.contact.cid} className=\"button-group\">\r\n        <button\r\n          onClick={this.selectContactHandler}\r\n          id={this.props.contact.cid}\r\n          className=\"button\"\r\n        >\r\n          {this.props.contact.targets.map(user => {\r\n            return user ? user.username : null;\r\n          })}\r\n        </button>\r\n        <button\r\n          className=\"button small\"\r\n          id={this.props.contact.cid}\r\n          onClick={this.props.deleteContactHandler}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport ContactsSearch from \"./ContactsSearch\";\r\nimport {\r\n  deleteContact,\r\n  selectContact\r\n} from \"../../store/actions/contactsActions\";\r\nimport { getMessagesSuccess } from \"../../store/actions/messageActions\";\r\nimport SocketEmiter from \"../../store/SocketEmiter\";\r\nimport ContactButton from \"./ContactButton\";\r\n\r\nexport default class ContactsBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteContactHandler = this.deleteContactHandler.bind(this);\r\n  }\r\n  deleteContactHandler(e) {\r\n    deleteContact(e.target.id);\r\n  }\r\n  componentDidMount() {\r\n    SocketEmiter.getContactListRequest();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"contacts-box\">\r\n        <div className=\"\">\r\n          <h3>Contacts</h3>\r\n          {this.props.contacts.map(contact => {\r\n            return contact ? (\r\n              <ContactButton\r\n                key={contact.cid}\r\n                contact={contact}\r\n                deleteContactHandler={this.deleteContactHandler}\r\n              />\r\n            ) : null;\r\n          })}\r\n          <ContactsSearch\r\n            userId={this.props.userId}\r\n            items={this.props.searchItems}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport InputBox from \"./InputBox\";\r\nimport MessageBox from \"./MessageBox\";\r\nimport ContactsBox from \"./ContactsBox\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendMessage } from \"../../store/actions/messageActions\";\r\n\r\nclass MessageApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleMessage = this.handleMessage.bind(this);\r\n  }\r\n\r\n  handleMessage(message) {\r\n    sendMessage({\r\n      messages: message,\r\n      contact: this.props.contacts.activeContact\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"chat-container\">\r\n        <div className=\"sidebar-container\">\r\n          <ContactsBox\r\n            userId={this.props.userId}\r\n            contacts={this.props.contacts.items}\r\n            activeContact={this.props.contacts.activeContact}\r\n            searchItems={this.props.searchItems}\r\n          />\r\n        </div>\r\n        <div className=\"message-container\">\r\n          <MessageBox messages={this.props.messages} />\r\n          <InputBox\r\n            handleMessage={this.handleMessage}\r\n            activeContact={this.props.contacts.activeContact}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  messages: state.messages,\r\n  searchItems: state.contacts.searchItems\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessageApp);\r\n","import {\r\n    store\r\n} from \"../..\";\r\nimport SocketEmiter from \"../SocketEmiter\";\r\n\r\nexport function sendMessage(data) {\r\n    SocketEmiter.sendMessage(data)\r\n    store.dispatch({\r\n        type: \"SEND_MESSAGE_REQUEST\",\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport function getMessagesSuccess(data) {\r\n    store.dispatch({\r\n        type: \"GET_ALL_MESSAGES\",\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport function newMessageSuccess(data) {\r\n    store.dispatch({\r\n        type: \"ADD_MESSAGE\",\r\n        payload: data\r\n    })\r\n}","import React from \"react\";\r\n\r\nexport default function Logout() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h5>Successfully logged out</h5>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  userSearchDone,\r\n  addNewContact,\r\n  getContactsListSuccess\r\n} from \"./actions/contactsActions\";\r\nimport {\r\n  watchUserAuthorizedDone\r\n} from \"./actions/userActions\";\r\nimport {\r\n  getMessagesSuccess,\r\n  newMessageSuccess\r\n} from \"./actions/messageActions\";\r\nimport SocketEmiter from \"./SocketEmiter\";\r\n\r\nclass SocketObserver {\r\n  constructor(socket) {\r\n    this.socket = socket;\r\n  }\r\n\r\n  //Watch methods\r\n  async watchUserAuth() {\r\n    this.socket.on(\"UserAuthorized\", data => {\r\n      if (data === false) {} else {\r\n        watchUserAuthorizedDone(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  async watchUserSearch() {\r\n    this.socket.on(\"UserSearchDone\", async data => {\r\n      userSearchDone(data);\r\n    });\r\n  }\r\n\r\n  async addNewContactDone() {\r\n    this.socket.on(\"AddNewContactDone\", response => {\r\n      SocketEmiter.getContactListRequest()\r\n    });\r\n  }\r\n\r\n  async getContactListSuccess() {\r\n    this.socket.on(\"GetContactListDone\", contactList => {\r\n      getContactsListSuccess(contactList);\r\n    });\r\n  }\r\n  getAllMessagesDone() {\r\n    this.socket.on(\"GetAllMessagesDone\", messages => {\r\n      getMessagesSuccess(messages);\r\n    });\r\n  }\r\n  watchMessages() {\r\n    this.socket.on(\"NewMessage\", message => {\r\n      newMessageSuccess(message)\r\n    });\r\n  }\r\n  watchDeleteContact() {\r\n    this.socket.on(\"ContactDeleted\", () => {\r\n      console.log(1)\r\n      SocketEmiter.getContactListRequest()\r\n    })\r\n  }\r\n\r\n  async watchAll() {\r\n    this.watchUserAuth();\r\n    this.watchUserSearch();\r\n    this.addNewContactDone();\r\n    this.getContactListSuccess();\r\n    this.watchMessages();\r\n    this.getAllMessagesDone()\r\n    this.watchDeleteContact()\r\n  }\r\n}\r\n\r\nexport default SocketObserver;","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n//Components\nimport Navbar from \"./components/layout/Navbar\";\nimport HomePage from \"./components/layout/HomePage\";\nimport SignIn from \"./components/auth/SignIn\";\nimport LogIn from \"./components/auth/LogIn\";\nimport MessageApp from \"./components/chat/MessageApp\";\nimport Logout from \"./components/auth/Logout\";\n\n//\nimport socket from \"./config/socketConfig\";\nimport SocketObserver from \"./store/SocketObserver\";\n\n//Style\nimport \"./style/main.css\";\nimport { store } from \"./index\";\n\nclass App extends Component {\n  componentDidMount() {\n    socket.emit(\"CheckUser\");\n    //!\n    const Observer = new SocketObserver(socket, store);\n    Observer.watchAll();\n  }\n  render() {\n    return (\n      <Router>\n        <div id=\"app\">\n          <Navbar user={this.props.user} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => {\n                if (this.props.user.isLoggedIn)\n                  return <MessageApp userId={this.props.user.data.uid} />;\n                else return <HomePage />;\n              }}\n            />\n\n            <Route\n              path=\"/signin\"\n              render={() => {\n                if (!this.props.user.isLoggedIn) return <SignIn />;\n                else return <Redirect to=\"/\" />;\n              }}\n            />\n\n            <Route\n              path=\"/login\"\n              render={() => {\n                if (!this.props.user.isLoggedIn) return <LogIn />;\n                else return <Redirect to=\"/\" />;\n              }}\n            />\n            <Route\n              path=\"/logout\"\n              render={() => {\n                return <Logout />;\n              }}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","const initialState = {\r\n    data: {},\r\n    isLoggedIn: false,\r\n    inProgress: false,\r\n}\r\n\r\nexport default (state = initialState, {\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case \"USER_AUTH\":\r\n            return {\r\n                inProgress: false,\r\n                isLoggedIn: true,\r\n                data: payload,\r\n            }\r\n        case \"DESTROY_USER\":\r\n            return {\r\n                inProgress: false,\r\n                isLoggedIn: false,\r\n                data: {},\r\n            }\r\n        case \"USER_FETCH_REQUEST\":\r\n            return {\r\n                ...state,\r\n                inProgress: true\r\n            }\r\n        case \"USER_FETCH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                data: payload,\r\n                isLoggedIn: true,\r\n                inProgress: false,\r\n            }\r\n        case \"USER_FETCH_FAIL\":\r\n            return {\r\n                ...state,\r\n                inProgress: false,\r\n            }\r\n        case \"USER_LOGOUT_SUCCESS\":\r\n            return {\r\n                ...state,\r\n            }\r\n        case \"USER_LOGOUT_FAIL\":\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    searchItems: [],\r\n    items: [],\r\n    isFetching: false,\r\n    activeContact: ''\r\n}\r\n\r\nexport default (state = initialState, {\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case \"SELECT_CONTACT\":\r\n            return {\r\n                ...state,\r\n                activeContact: payload\r\n            }\r\n        case \"GET_CONTACTS_REQUEST\":\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case \"GET_CONTACTS_LIST_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n                isFetching: false,\r\n            }\r\n        case \"GET_CONTACTS_FAIL\":\r\n            return {\r\n                ...state,\r\n                items: [],\r\n                isFetching: false,\r\n            }\r\n        case \"USERS_SEARCH_REQUEST\":\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case \"USERS_SEARCH_DONE\":\r\n            return {\r\n                ...state,\r\n                searchItems: payload,\r\n                isFetching: false,\r\n            }\r\n        case \"USERS_SEARCH_FAIL\":\r\n            return {\r\n                ...state,\r\n                searchItems: [],\r\n                isFetching: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  messages: [],\r\n  newMessage: false,\r\n  processing: false,\r\n};\r\n\r\nexport default (state = initialState, {\r\n  type,\r\n  payload\r\n}) => {\r\n  switch (type) {\r\n    case \"ADD_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        processing: false,\r\n        messages: [...state.messages, payload]\r\n      };\r\n    case \"GET_ALL_MESSAGES\":\r\n      return {\r\n        ...state,\r\n        processing: false,\r\n        messages: payload\r\n      }\r\n    case \"GET_MESSAGES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        processing: false,\r\n        messages: payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","const initialState = {\r\n    signInCompleted: false,\r\n    inProgress: false,\r\n}\r\n\r\nexport default (state = initialState, {\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case \"USER_SIGNUP_REQUEST\":\r\n            return { ...state,\r\n                signInCompleted: false,\r\n                inProgress: true\r\n            }\r\n        case \"USER_SIGNUP_SUCCESS\":\r\n            return { ...state,\r\n                signInCompleted: true\r\n            }\r\n        case \"USER_SIGNUP_FAIL\":\r\n            return { ...state,\r\n                signInCompleted: false,\r\n            }\r\n        default:\r\n            return {\r\n                signInCompleted: false\r\n            }\r\n    }\r\n}","const initialState = {\r\n    signinError: '',\r\n    messageError: '',\r\n    contactError: '',\r\n    loginError: '',\r\n}\r\n\r\nexport default (state = initialState, {\r\n    type,\r\n    payload\r\n}) => {\r\n    switch (type) {\r\n        case 'MESSAGE_ERROR':\r\n            return { ...state,\r\n                messageError: payload.message\r\n            }\r\n        case 'SIGNIN_ERROR':\r\n            return { ...state,\r\n                signinError: payload.message\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            return { ...state,\r\n                loginError: payload.message\r\n            }\r\n        case 'CONTACT_ERROR':\r\n            return { ...state,\r\n                contactError: payload.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    open: false\r\n}\r\n\r\nexport default (state = initialState, {\r\n    type,\r\n}) => {\r\n    switch (type) {\r\n\r\n        case \"NAVBAR_ACTION\":\r\n            return {\r\n                open: !state.open\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport mainSaga from \"./store/actions/mainSaga\";\n\nimport App from \"./App\";\n\nimport UserAuthReducer from \"./store/reducers/UserAuthReducer\";\nimport ContactsReducer from \"./store/reducers/ContactsReducer\";\nimport MessageReducer from \"./store/reducers/MessageReducer\";\nimport SignInReducer from \"./store/reducers/SignInReducer\";\nimport ErrorReducer from \"./store/reducers/ErrorReducer\";\nimport NavbarReducer from \"./store/reducers/NavbarReducer\";\n\nconst reducers = combineReducers({\n  user: UserAuthReducer,\n  contacts: ContactsReducer,\n  messages: MessageReducer,\n  signIn: SignInReducer,\n  error: ErrorReducer,\n  navbar: NavbarReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    /* eslint-disable no-underscore-dangle */\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    /* eslint-enable */\n  )\n);\n\nsagaMiddleware.run(mainSaga);\n\nfunction render() {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n}\n\nrender();\n\nstore.subscribe(render);\n"],"sourceRoot":""}